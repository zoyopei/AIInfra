1
00:00:00,000 --> 00:00:02,316
内容/录制:Z0MI 酱，视频剪辑/字幕:梁嘉铭

2
00:00:02,650 --> 00:00:03,566
hello 大家好

3
00:00:03,566 --> 00:00:05,883
我是那个老子明天不上班

4
00:00:05,883 --> 00:00:07,200
但我不是老子的 ZOMI

5
00:00:13,000 --> 00:00:14,200
今天我们来看一下

6
00:00:14,200 --> 00:00:15,966
英伟达 B 系列里面

7
00:00:15,966 --> 00:00:17,483
整体的网络架构的一个

8
00:00:17,483 --> 00:00:20,333
或者网络相关的一些演进的细节

9
00:00:20,366 --> 00:00:21,650
在前期视频里面

10
00:00:21,650 --> 00:00:23,483
ZOMI 其实跟着大家一起去分析了

11
00:00:23,483 --> 00:00:25,366
英伟达 Blackwell 系列

12
00:00:25,366 --> 00:00:26,533
相关的产品

13
00:00:26,533 --> 00:00:28,566
和代际之间的一个发展的情况

14
00:00:28,566 --> 00:00:29,733
现在我们来看一下

15
00:00:29,733 --> 00:00:31,933
它关于网络这方面

16
00:00:31,933 --> 00:00:33,566
一系列的相关的信息

17
00:00:33,566 --> 00:00:34,400
那最开始

18
00:00:34,400 --> 00:00:35,650
我们这一期视频里面

19
00:00:35,650 --> 00:00:37,200
主要是分开三个内容

20
00:00:37,250 --> 00:00:38,166
左边这三个

21
00:00:38,166 --> 00:00:40,050
跟大家一起去介绍一下

22
00:00:40,050 --> 00:00:40,650
首先第一个

23
00:00:40,650 --> 00:00:41,366
我们看一下

24
00:00:41,366 --> 00:00:43,566
因为它的带宽的基本的分析

25
00:00:43,650 --> 00:00:44,683
什么是带宽

26
00:00:44,683 --> 00:00:46,133
大家

27
00:00:46,333 --> 00:00:48,200
非常关心的一些信息

28
00:00:48,200 --> 00:00:49,266
是怎么去计算

29
00:00:49,266 --> 00:00:51,866
接着我们在 NVSwitch 跟 NVLink 之间

30
00:00:51,866 --> 00:00:53,783
了解到了卡跟卡之间

31
00:00:53,783 --> 00:00:55,466
也就是节点内的一个通讯

32
00:00:55,466 --> 00:00:58,150
之后我们来看一下节点间的通讯

33
00:00:58,150 --> 00:00:58,550
于是

34
00:00:58,550 --> 00:01:01,783
就变成网卡跟交换机之间的信息了

35
00:01:01,783 --> 00:01:04,616
我们分开三个内容跟大家去分享

36
00:01:05,250 --> 00:01:07,050
现在我们马上来到了第一个内容

37
00:01:07,050 --> 00:01:09,416
就整体看一下 NV

38
00:01:09,416 --> 00:01:11,416
英伟达的一个带宽的基本的分析

39
00:01:11,416 --> 00:01:13,333
那了解带宽的基本分析之前

40
00:01:13,333 --> 00:01:14,783
我们首先要看一下

41
00:01:15,016 --> 00:01:17,100
带宽是怎么去计算

42
00:01:17,100 --> 00:01:18,933
那这里面带宽的计算还蛮有意思

43
00:01:18,933 --> 00:01:20,650
它有两个不同的单位

44
00:01:20,650 --> 00:01:23,133
这里面中已经举了两个具体的例子

45
00:01:23,133 --> 00:01:23,450
第一个

46
00:01:23,450 --> 00:01:25,500
我们以 NVLink 的传输带宽作为

47
00:01:25,500 --> 00:01:26,100
一个例子

48
00:01:26,100 --> 00:01:27,983
因为在整体 Blackwell 里面

49
00:01:27,983 --> 00:01:30,100
用的是 NVLink 的第五代

50
00:01:30,100 --> 00:01:30,533
那带宽

51
00:01:30,533 --> 00:01:33,850
官网全称它自己能够传输 1.8TB/s

52
00:01:33,850 --> 00:01:34,416
那注意了

53
00:01:34,416 --> 00:01:35,983
这个 b 是大 B

54
00:01:35,983 --> 00:01:38,383
那这是针对计算的带宽

55
00:01:38,383 --> 00:01:39,416
所谓的计算带宽

56
00:01:39,416 --> 00:01:41,650
就是卡跟卡之间的一个带宽

57
00:01:41,650 --> 00:01:43,816
那卡主要是用来做计算

58
00:01:43,816 --> 00:01:45,500
那按照内存的带宽的算法

59
00:01:45,500 --> 00:01:47,416
以字节每秒为单位

60
00:01:47,416 --> 00:01:51,216
所以这里面的 b 是一个大 B 每秒

61
00:01:51,216 --> 00:01:52,700
那另外的一个计算方式

62
00:01:52,700 --> 00:01:55,533
是以网络带宽来去计算

63
00:01:55,533 --> 00:01:56,183
那这里面

64
00:01:56,183 --> 00:01:59,416
以 NVLink 的一个 switch 或者 IB

65
00:01:59,416 --> 00:02:00,583
或者以太网的交换机

66
00:02:00,583 --> 00:02:02,250
和网卡上面去计算

67
00:02:02,250 --> 00:02:04,250
按照传输的数据位

68
00:02:04,250 --> 00:02:06,700
这里面是按传输的数据位来去算

69
00:02:06,800 --> 00:02:08,833
所以里面用的是小 b

70
00:02:08,833 --> 00:02:11,750
小 b 就是每比特为单位

71
00:02:11,750 --> 00:02:14,033
因此我们平时卡跟卡之间

72
00:02:14,033 --> 00:02:15,033
一个数据的传输

73
00:02:15,033 --> 00:02:17,350
可能用的是大 B 每秒了

74
00:02:17,350 --> 00:02:19,200
于是变成 GB/s 每秒

75
00:02:19,233 --> 00:02:21,600
另外它我们以网络的来传输的话

76
00:02:21,600 --> 00:02:24,233
我们会以数据位作为一个单位

77
00:02:24,233 --> 00:02:25,200
以小 b 为例子

78
00:02:25,200 --> 00:02:25,916
因此呢

79
00:02:25,916 --> 00:02:27,633
又变成小 b 的 Gb/s 了

80
00:02:27,633 --> 00:02:30,516
所以左边的这个是计算的带宽

81
00:02:30,633 --> 00:02:33,083
右边的这个就是网络的带宽

82
00:02:33,083 --> 00:02:35,683
节点内的跟节点外

83
00:02:35,683 --> 00:02:38,283
它们的单位是完全不一样

84
00:02:38,600 --> 00:02:40,533
了解完计算台带宽之后

85
00:02:40,533 --> 00:02:42,200
我们来看一下第一代

86
00:02:42,200 --> 00:02:43,933
英伟达第一代 NVLink

87
00:02:43,933 --> 00:02:45,933
其实是出现在 P100 里面

88
00:02:45,933 --> 00:02:47,483
那 ZOMI 在之前的一个视频里面

89
00:02:47,483 --> 00:02:49,483
其实跟大家已经分享了很多了

90
00:02:49,483 --> 00:02:49,850
这里面

91
00:02:49,850 --> 00:02:52,483
我们简单的看看右

92
00:02:52,483 --> 00:02:54,083
右边的这个图了

93
00:02:54,083 --> 00:02:54,683
首先我们可

94
00:02:54,683 --> 00:02:55,483
以看到

95
00:02:55,483 --> 00:02:58,166
这里面一共有 4 条 NVlink 了

96
00:02:58,166 --> 00:02:58,883
单条 NVlink

97
00:02:58,883 --> 00:03:01,683
是一个双工双路的一个信道了

98
00:03:01,683 --> 00:03:03,016
那这边把它放大一条

99
00:03:03,016 --> 00:03:03,683
可以看到

100
00:03:03,683 --> 00:03:05,450
首先我可以往左传

101
00:03:05,450 --> 00:03:07,016
我又可以往右传

102
00:03:07,016 --> 00:03:08,933
于是它就变成一个双工双路

103
00:03:08,933 --> 00:03:09,933
一个具体的通道

104
00:03:09,933 --> 00:03:10,966
那通过的组合

105
00:03:10,966 --> 00:03:13,533
一共有 32 条配线

106
00:03:13,533 --> 00:03:15,616
那 32 可以看得数得出来

107
00:03:15,616 --> 00:03:16,733
在每个方向上

108
00:03:16,733 --> 00:03:19,483
可以产生 8 条不同的配对

109
00:03:19,483 --> 00:03:20,216
因此

110
00:03:20,216 --> 00:03:24,283
我们 2 乘以 8 乘以 2 就变成了 32 条了

111
00:03:24,283 --> 00:03:26,133
那在整个 P100 里面

112
00:03:26,133 --> 00:03:27,333
就第一代

113
00:03:27,333 --> 00:03:29,166
应该是 18 年的时候

114
00:03:29,166 --> 00:03:31,216
发布的一个系列的产品

115
00:03:31,216 --> 00:03:34,133
里面就集成了四条 NVLink

116
00:03:34,133 --> 00:03:35,616
我们叫做 NVL

117
00:03:35,616 --> 00:03:37,850
一条两条三条四条

118
00:03:37,850 --> 00:03:39,883
这里面大家可以放大来看看

119
00:03:39,883 --> 00:03:41,766
每条 NVLink 就有双路

120
00:03:41,766 --> 00:03:42,366
那因此

121
00:03:42,366 --> 00:03:43,533
一共有

122
00:03:43,533 --> 00:03:47,883
每一条有双路的 40GB/s 的一个带宽

123
00:03:47,883 --> 00:03:49,450
因此我们整个芯片

124
00:03:49,450 --> 00:03:51,883
也就 GPU 跟 GPU 之间的互联

125
00:03:51,883 --> 00:03:57,050
能够实现 160GB/s 的一个整体的带宽

126
00:03:57,050 --> 00:04:00,250
也就是 4 乘以 4 等于 16 嘛

127
00:04:01,183 --> 00:04:01,950
了解完这个之后

128
00:04:01,950 --> 00:04:02,750
我们看一下

129
00:04:02,750 --> 00:04:04,583
打开刚才的一个 NVLink

130
00:04:04,583 --> 00:04:06,216
一个具体的物理的链接

131
00:04:06,216 --> 00:04:07,550
那这里面我们可以看到

132
00:04:07,550 --> 00:04:08,416
一共四条了

133
00:04:08,416 --> 00:04:10,750
但是这里面的真正的传输数率

134
00:04:10,750 --> 00:04:14,616
或者物理的传输数量是 160 GB/s

135
00:04:14,616 --> 00:04:16,583
但是真正的利用率

136
00:04:16,583 --> 00:04:17,666
它没有那么的高

137
00:04:17,666 --> 00:04:20,700
因为受限于物理的一些相关的影响

138
00:04:20,700 --> 00:04:21,550
所以它一共

139
00:04:21,550 --> 00:04:25,816
可能会去到 94%到 92%之间

140
00:04:25,816 --> 00:04:27,183
一个整体的利用率

141
00:04:27,183 --> 00:04:27,866
当然了这里面

142
00:04:27,866 --> 00:04:29,383
取决于我们的制造工艺

143
00:04:29,383 --> 00:04:31,783
和制造工艺到底用什么方案

144
00:04:31,783 --> 00:04:32,550
那用光

145
00:04:32,550 --> 00:04:34,416
用铜它是分别完

146
00:04:34,416 --> 00:04:36,300
全不一样的一个利用率

147
00:04:36,300 --> 00:04:36,583
另外

148
00:04:36,583 --> 00:04:40,816
它还支持读和写相关的原子的操作

149
00:04:40,816 --> 00:04:42,583
那接着我们再进一步的打开

150
00:04:42,583 --> 00:04:44,616
看一下整个 NVLink 里面

151
00:04:44,616 --> 00:04:45,583
还蛮有意思

152
00:04:45,583 --> 00:04:46,900
那整个 NVLink 通道了

153
00:04:46,900 --> 00:04:48,300
我们称为 Brick

154
00:04:48,616 --> 00:04:49,783
单个 NVLink

155
00:04:49,783 --> 00:04:51,500
它是一个双向的接口

156
00:04:51,500 --> 00:04:53,150
所以我们可以数据可以往下传

157
00:04:53,150 --> 00:04:54,583
也可以这么去传

158
00:04:54,616 --> 00:04:55,583
那每个方向

159
00:04:55,583 --> 00:04:57,316
包含 8 个差分对

160
00:04:57,316 --> 00:04:59,300
12345678

161
00:04:59,383 --> 00:05:02,266
每个方向都会有正向反向

162
00:05:02,266 --> 00:05:04,750
或者我们传输和传入一共有 8 对

163
00:05:04,750 --> 00:05:06,616
总共有 32 条线

164
00:05:06,616 --> 00:05:08,500
那这里面的电气连接线

165
00:05:08,500 --> 00:05:10,750
使用了直流耦合 DC

166
00:05:10,750 --> 00:05:11,616
这里面可以看到

167
00:05:11,616 --> 00:05:12,983
相关的一些物理链接

168
00:05:12,983 --> 00:05:15,183
在 85 欧姆的一个差分终端

169
00:05:15,183 --> 00:05:17,550
来形成整个 NVLink

170
00:05:17,900 --> 00:05:19,266
那了解完第一代之后

171
00:05:19,266 --> 00:05:19,900
我们就知道

172
00:05:19,900 --> 00:05:21,500
NVLink 的一个具体的带宽

173
00:05:21,500 --> 00:05:22,900
是怎么去计算

174
00:05:22,900 --> 00:05:25,100
因为我们有四对差分信号

175
00:05:25,100 --> 00:05:28,183
同时包含接收和发送的相关的线路

176
00:05:28,216 --> 00:05:29,466
和通讯的信号线

177
00:05:29,466 --> 00:05:29,666
的时候

178
00:05:29,666 --> 00:05:31,583
我们在真正计算网络带宽的时候

179
00:05:31,583 --> 00:05:32,900
400 GB/s

180
00:05:32,900 --> 00:05:33,783
每个 Port

181
00:05:33,783 --> 00:05:34,266
指的是

182
00:05:34,266 --> 00:05:38,983
同时能够发收 400 GB/s 相关的数据

183
00:05:38,983 --> 00:05:40,150
那四对三分对

184
00:05:40,150 --> 00:05:42,016
构成 RX 跟 TX

185
00:05:42,016 --> 00:05:44,550
也就是 RC 跟 TX 各两对

186
00:05:44,550 --> 00:05:46,300
一个 Transmit 一个 receive

187
00:05:46,500 --> 00:05:47,866
这里面的数据这么传

188
00:05:47,866 --> 00:05:50,616
数据这么传 R 代表是我们的 receive

189
00:05:50,616 --> 00:05:51,616
t 代表是 Transmit

190
00:05:51,616 --> 00:05:54,066
从网络的视角来看

191
00:05:54,066 --> 00:05:57,183
它实际上是一个单向的 400GB/s 的电路

192
00:05:57,183 --> 00:05:59,016
而从内存带宽来说

193
00:05:59,016 --> 00:06:02,016
它支持 100GB/s 的一个访存

194
00:06:02,216 --> 00:06:03,166
具体的带宽

195
00:06:03,166 --> 00:06:05,550
ZOMI 在之前的视频里面也讲过

196
00:06:05,550 --> 00:06:06,700
因为当时候很落后

197
00:06:06,700 --> 00:06:09,016
所以它里面的 HBM 用的是 HBM2

198
00:06:09,016 --> 00:06:11,650
当然了当时候还是很早期

199
00:06:11,650 --> 00:06:12,966
所以它跟嗯

200
00:06:12,966 --> 00:06:13,816
英伟达的 GPU

201
00:06:13,816 --> 00:06:16,250
跟 CPU 之间走的还是 PCIe

202
00:06:16,250 --> 00:06:16,766
那这里面

203
00:06:16,766 --> 00:06:19,050
只是讲了第一代的 NVLink

204
00:06:19,050 --> 00:06:20,933
还有网络的带宽

205
00:06:20,933 --> 00:06:22,533
相关的一个简单的计算

206
00:06:23,133 --> 00:06:23,766
在这里面

207
00:06:23,766 --> 00:06:25,300
ZOMI 讲的东西不一定完全对呀

208
00:06:25,300 --> 00:06:28,700
欢迎大家去指正相关的错误点

209
00:06:28,700 --> 00:06:30,966
那接着我们来了解第二个内容

210
00:06:30,966 --> 00:06:32,533
就是整个 NVSwitch

211
00:06:32,533 --> 00:06:35,050
跟 NVLink 之间的一个具体的关系了

212
00:06:35,050 --> 00:06:35,766
那当然

213
00:06:35,766 --> 00:06:38,566
我们最重要的是看 Blackwell 的一代哦

214
00:06:38,566 --> 00:06:39,300
Blackwell 里面

215
00:06:39,300 --> 00:06:41,366
用的是第五代的一个 NVLink

216
00:06:41,366 --> 00:06:43,816
每个 GPU 上面有 18 个 NVLink

217
00:06:43,816 --> 00:06:45,416
单个 link 的双向带宽

218
00:06:45,416 --> 00:06:47,566
从上一代的 H100 的 NVLink

219
00:06:47,566 --> 00:06:48,616
第四代

220
00:06:48,616 --> 00:06:52,850
50 GB/s 现在已经升级到了 100GBps

221
00:06:52,850 --> 00:06:54,216
也就是 NVLink 第四代

222
00:06:54,216 --> 00:06:54,966
但第五代

223
00:06:54,966 --> 00:06:57,416
其实有一个跨性能的一个提升了

224
00:06:57,416 --> 00:06:59,966
这个还是非常的有意思

225
00:06:59,966 --> 00:07:02,250
那我们可以看到这里面的连接线

226
00:07:02,250 --> 00:07:04,100
或者它能够互联的 GPU 数

227
00:07:04,250 --> 00:07:05,733
其实都是相同

228
00:07:05,733 --> 00:07:07,900
但是网络能传输的一个带宽

229
00:07:07,900 --> 00:07:10,766
已经到了非常非常的多

230
00:07:10,766 --> 00:07:11,850
那整体来说

231
00:07:11,850 --> 00:07:14,416
B 系列的 GPU 跟 GPU 之间的互联的带宽

232
00:07:14,416 --> 00:07:16,816
就变成了 1.8 GB/s

233
00:07:16,816 --> 00:07:19,816
也就是我 GPU a 传给 GPU b

234
00:07:19,850 --> 00:07:23,850
它的理论的带宽上限是 1.8 TB/s

235
00:07:24,216 --> 00:07:25,366
那我们看一下

236
00:07:25,366 --> 00:07:26,816
实际上刚才讲到

237
00:07:26,816 --> 00:07:28,166
我还是回到这一个图

238
00:07:28,166 --> 00:07:30,700
第四代的一个 GPU 的传输速率

239
00:07:30,700 --> 00:07:32,650
它是 50 GB/s

240
00:07:32,650 --> 00:07:33,500
每一条线

241
00:07:33,500 --> 00:07:34,100
这里面

242
00:07:34,100 --> 00:07:35,816
每一条线是 100 GB/s

243
00:07:35,816 --> 00:07:37,500
因为这里面有 18 条线

244
00:07:37,500 --> 00:07:41,250
所以 18 乘以 100 就变成 1.8TB 嘛

245
00:07:41,250 --> 00:07:42,100
那这里面虽然有 18

246
00:07:42,100 --> 00:07:44,366
18 乘以 5 等于 900

247
00:07:44,366 --> 00:07:46,166
那这里面其实还是蛮有意思

248
00:07:46,166 --> 00:07:48,900
因为随着我们的新一个代的产品

249
00:07:48,900 --> 00:07:50,300
那接着我们看一下

250
00:07:50,300 --> 00:07:52,416
它里面的一些相关的细节

251
00:07:52,733 --> 00:07:54,133
首先刚才我们讲到了

252
00:07:54,133 --> 00:07:55,766
B200 的 NVLink 的带宽

253
00:07:55,766 --> 00:07:57,216
是 1.8TBPS

254
00:07:57,216 --> 00:07:59,816
那由 18 个 Port 来去组成

255
00:07:59,816 --> 00:08:01,500
也就是 18 个接口了

256
00:08:01,500 --> 00:08:04,900
从 Port0 到 Port17 有 18 个接口

257
00:08:04,900 --> 00:08:07,650
但刚才我们看到的第一代

258
00:08:07,650 --> 00:08:09,300
其实只有四条连接线

259
00:08:09,300 --> 00:08:10,850
只有 4 个 Port 的接口

260
00:08:10,900 --> 00:08:11,900
每一个

261
00:08:11,900 --> 00:08:15,133
Port 其实由 4 对差分对来去构成

262
00:08:15,133 --> 00:08:19,533
每个 part 包含两组 224 GB/s

263
00:08:19,533 --> 00:08:22,333
也就是串形相关的一些接口

264
00:08:24,166 --> 00:08:26,833
接着我们看一下回顾一下第四代

265
00:08:26,916 --> 00:08:29,883
刚才我们讲的是第五代的 NVLink

266
00:08:30,050 --> 00:08:31,483
当然还是蛮有意思

267
00:08:31,600 --> 00:08:33,200
NVLink 和 NVSwitch

268
00:08:33,200 --> 00:08:34,850
它不是一个产物

269
00:08:34,966 --> 00:08:35,650
NVlink

270
00:08:35,650 --> 00:08:37,766
是具体的网络的协议

271
00:08:37,766 --> 00:08:39,166
或者具体的通讯的协议

272
00:08:39,166 --> 00:08:40,366
而 NVSwitch

273
00:08:40,366 --> 00:08:43,050
是网络协议或网络通讯的一个电缆

274
00:08:43,050 --> 00:08:43,933
所组成

275
00:08:43,933 --> 00:08:46,600
一个具体的芯片和对应的产品

276
00:08:46,766 --> 00:08:49,883
那在 Blackwell 系列里面

277
00:08:50,266 --> 00:08:51,483
NVLink 的第五代

278
00:08:51,483 --> 00:08:53,733
对应的是第四代的 NVSwitch

279
00:08:53,733 --> 00:08:55,600
所以大家搞清楚这个概念

280
00:08:55,600 --> 00:08:57,166
那第四代的 NVSwitch

281
00:08:57,166 --> 00:08:58,683
它主要是 GPU 跟 GPU

282
00:08:58,683 --> 00:08:59,933
一个整体的带宽

283
00:08:59,933 --> 00:09:01,333
大了一倍多

284
00:09:01,333 --> 00:09:03,883
因为 h 跟 b 相比

285
00:09:03,883 --> 00:09:07,050
它已经从 900TB/s 变成 1.8TB/s

286
00:09:07,050 --> 00:09:09,733
最多可以支持 576 个 GPU

287
00:09:09,733 --> 00:09:10,400
所以蛮有意思

288
00:09:10,400 --> 00:09:12,166
就是后面我们会看到

289
00:09:12,250 --> 00:09:16,000
NVL 这么一个形态就变成了 576

290
00:09:16,383 --> 00:09:17,383
那 NVL576

291
00:09:17,383 --> 00:09:18,216
就是最多

292
00:09:18,216 --> 00:09:21,066
能够支持的一个 GPU 的 Superpod 小集群

293
00:09:21,066 --> 00:09:24,500
总体的带宽上限就是 576*1.8 TB/s

294
00:09:24,500 --> 00:09:26,733
所以说等于 1PB/s

295
00:09:26,733 --> 00:09:28,383
非常的夸张

296
00:09:28,600 --> 00:09:31,966
夸张到还是很难去想象

297
00:09:31,966 --> 00:09:33,366
那我们看一下下面这个图

298
00:09:33,366 --> 00:09:34,316
就从第一代

299
00:09:34,316 --> 00:09:36,566
第二代到第三代到第四代

300
00:09:36,633 --> 00:09:40,083
现在的一个 NVlink 或者 NVSwitch

301
00:09:40,083 --> 00:09:41,883
我们叫做 NVLSwitch

302
00:09:41,883 --> 00:09:45,000
然后整体的带宽是非常的夸张

303
00:09:45,000 --> 00:09:46,200
里面对应的架构

304
00:09:46,200 --> 00:09:48,166
每一代都是完全不一样

305
00:09:49,233 --> 00:09:49,600
那下面

306
00:09:49,600 --> 00:09:52,766
我们看一下整个 NVLink 的 switch 的 Chip

307
00:09:52,800 --> 00:09:53,366
那后面

308
00:09:53,366 --> 00:09:56,033
其实 NVSwitch 已经有单独的芯片

309
00:09:56,033 --> 00:09:57,366
这里面还蛮有意思

310
00:09:57,666 --> 00:09:59,866
首先会分开好几个内容

311
00:09:59,866 --> 00:10:02,983
第一个就是上面的 i/o serocs

312
00:10:02,983 --> 00:10:05,183
也就是对应的串形的接口

313
00:10:05,666 --> 00:10:08,066
中间的往下一个就是对应

314
00:10:08,066 --> 00:10:09,783
里面可以看到有 36 个 port

315
00:10:09,783 --> 00:10:11,150
下面有 36 个 port

316
00:10:11,150 --> 00:10:14,666
一个 NVSwitch 的一个 Chip 就支持 36*32

317
00:10:14,666 --> 00:10:17,583
所以可以有 72 个 NVLink 的 port 了

318
00:10:17,583 --> 00:10:19,633
每个 port 有两条连接线

319
00:10:19,633 --> 00:10:20,783
所以说双线的带宽

320
00:10:20,783 --> 00:10:23,516
就变成 2 乘以 2 乘以 200 GB/s

321
00:10:23,516 --> 00:10:25,666
就等于 100 GB/s 了

322
00:10:25,666 --> 00:10:26,583
那一共

323
00:10:26,583 --> 00:10:28,233
上面因为整个 NVSwitch

324
00:10:28,233 --> 00:10:29,633
它一共这里面有 32 个

325
00:10:29,633 --> 00:10:31,033
这里面有 32 个

326
00:10:31,033 --> 00:10:32,983
所以能够支持 72 个 port

327
00:10:32,983 --> 00:10:34,866
对应的是 7.2 TB/s

328
00:10:34,866 --> 00:10:37,350
那 1.8TB/s 的 NVLink

329
00:10:37,350 --> 00:10:39,950
对应的应该是 18 个 port

330
00:10:40,916 --> 00:10:42,833
虽然我们讲了很多相关的数据

331
00:10:42,833 --> 00:10:44,316
非常的抽象

332
00:10:44,316 --> 00:10:45,633
因为现在的大模型

333
00:10:45,633 --> 00:10:48,716
都是讲究我传多少的模型的参数量

334
00:10:48,716 --> 00:10:50,266
规模那假设

335
00:10:50,266 --> 00:10:51,750
现在我们一个

336
00:10:52,383 --> 00:10:56,233
应该是 70b 或者 130b 的一个大模型了

337
00:10:56,233 --> 00:10:57,916
真正去传输

338
00:10:57,916 --> 00:10:59,950
网络模型的一层的时候

339
00:10:59,950 --> 00:11:04,383
我们会打假设现在有 220GB 相关的数据

340
00:11:04,383 --> 00:11:05,433
那传输一层的数据

341
00:11:05,433 --> 00:11:07,666
我们大概需要 22 毫秒

342
00:11:07,666 --> 00:11:10,983
那这个参数量也是非常的小

343
00:11:10,983 --> 00:11:11,866
非常的快

344
00:11:11,866 --> 00:11:13,316
所以对于大模型异常角色

345
00:11:13,316 --> 00:11:16,033
我们的反向聚合是完全够用

346
00:11:16,666 --> 00:11:18,150
因此对英伟达来说

347
00:11:18,150 --> 00:11:18,916
NVSwitch

348
00:11:18,916 --> 00:11:22,116
现在来说是刚好去匹配它的算力

349
00:11:22,116 --> 00:11:23,383
因为我们算得够快

350
00:11:23,383 --> 00:11:24,550
传的够快就够了

351
00:11:24,550 --> 00:11:26,716
而不是不断的去传数据

352
00:11:26,716 --> 00:11:28,783
这样会可能会导致超配

353
00:11:28,866 --> 00:11:29,916
那现在来看

354
00:11:29,916 --> 00:11:31,316
在整个报表系列里面

355
00:11:31,316 --> 00:11:33,783
已经出现了一种新的一个形态

356
00:11:33,783 --> 00:11:35,516
叫做 NVSwitch tray

357
00:11:35,983 --> 00:11:37,066
这个 tray 还蛮有意思

358
00:11:37,066 --> 00:11:39,066
这里面整个 tray 有两片

359
00:11:39,183 --> 00:11:43,033
NVSwitch 里面两片焊在这一个板上面

360
00:11:43,033 --> 00:11:43,750
而这个板

361
00:11:43,750 --> 00:11:46,466
最后会放在我们整个大的机柜上面

362
00:11:46,466 --> 00:11:49,066
这里面这个牌机柜里面的这一坨

363
00:11:49,066 --> 00:11:52,783
就是我们的 connect 或者 NVSwitch 的 tray

364
00:11:52,783 --> 00:11:54,866
而上面的这 10 个

365
00:11:54,866 --> 00:11:56,466
就是我们的 computray

366
00:11:56,666 --> 00:11:58,183
所以说上面的是

367
00:11:58,183 --> 00:11:59,750
专门用来做计算

368
00:11:59,750 --> 00:12:02,583
中间这排是专门用来做通讯

369
00:12:02,583 --> 00:12:04,066
下面这排八个

370
00:12:04,066 --> 00:12:06,116
也是专门用来做计算

371
00:12:06,116 --> 00:12:07,383
所以这里面是 switch

372
00:12:07,383 --> 00:12:09,833
这个十个是专门用来计算

373
00:12:09,833 --> 00:12:12,116
所以一共就有 18 个计算

374
00:12:12,116 --> 00:12:14,183
有 8 个做数据的传输

375
00:12:14,516 --> 00:12:18,783
集成我们一个 NVL72 的整体的机柜了

376
00:12:18,783 --> 00:12:19,183
那后面

377
00:12:19,183 --> 00:12:22,183
其实用一些很多的铜缆去组成起来

378
00:12:23,116 --> 00:12:26,033
现在我们回到一个简单的问题

379
00:12:26,033 --> 00:12:27,316
NVSwitch 有什么用

380
00:12:27,516 --> 00:12:28,433
那 NVSwitch

381
00:12:28,433 --> 00:12:29,383
其实蛮有意思

382
00:12:29,383 --> 00:12:30,516
就是一开始

383
00:12:30,516 --> 00:12:31,550
如果没有

384
00:12:31,550 --> 00:12:32,866
NVSwitch 的时候

385
00:12:33,066 --> 00:12:34,516
我们的计算完之后

386
00:12:34,516 --> 00:12:35,866
再进行通讯

387
00:12:35,866 --> 00:12:36,433
说实话

388
00:12:36,433 --> 00:12:39,666
网络跟网络之间这种是一种 full mesh

389
00:12:39,666 --> 00:12:41,433
也就互联全互联的方式

390
00:12:41,433 --> 00:12:43,466
那这是第一代只有 NVLink

391
00:12:43,466 --> 00:12:45,866
没有 NVSwitch 的一个情况

392
00:12:45,916 --> 00:12:47,916
GPU 跟 GPU 进行互联

393
00:12:48,183 --> 00:12:50,466
需要通过走 PCB 板上面的铜缆

394
00:12:50,466 --> 00:12:51,983
进行一个互传

395
00:12:51,983 --> 00:12:54,783
那 GPU0 传到 GPU2

396
00:12:54,783 --> 00:12:55,466
那这个时候

397
00:12:55,466 --> 00:12:58,383
可能要经过 GPU1 进行中转分发

398
00:12:58,383 --> 00:12:59,116
进行重传

399
00:12:59,116 --> 00:13:01,066
这个时候效率是非常的低

400
00:13:01,066 --> 00:13:02,266
所以我们计算个通讯

401
00:13:02,266 --> 00:13:04,116
没有办法很好的做到复用

402
00:13:04,116 --> 00:13:05,783
但是如果我们中间多了一个

403
00:13:05,783 --> 00:13:08,383
NVSwitch 相关的芯片

404
00:13:08,383 --> 00:13:08,666
于是

405
00:13:08,666 --> 00:13:11,466
我们可以大量的把数据都中转到

406
00:13:11,466 --> 00:13:12,833
具体的 NVS

407
00:13:12,833 --> 00:13:15,116
wish 的一个芯片上面

408
00:13:15,116 --> 00:13:16,550
然后再进行分发

409
00:13:16,550 --> 00:13:19,583
这个时候就可以看到计算跟通讯

410
00:13:19,583 --> 00:13:21,116
它其实可以做了很大

411
00:13:21,116 --> 00:13:22,783
一个时间的掩盖

412
00:13:22,833 --> 00:13:25,866
从而去提升我们整体的训练

413
00:13:25,866 --> 00:13:27,350
或者执行的效率了

414
00:13:27,833 --> 00:13:28,350
那现在

415
00:13:28,350 --> 00:13:31,183
英伟达它其实有很多相关的数据

416
00:13:31,183 --> 00:13:32,266
以 Llama3.1

417
00:13:32,266 --> 00:13:33,266
70B 来去测试

418
00:13:33,266 --> 00:13:36,550
在 30-50 tokens 每秒

419
00:13:36,550 --> 00:13:39,233
每 user 的一个网络的带宽的吞吐

420
00:13:39,433 --> 00:13:39,750
其中

421
00:13:39,750 --> 00:13:42,583
这里面的一个数据还是蛮有意思

422
00:13:42,583 --> 00:13:44,516
整体的 NVSWISH 的一个收益

423
00:13:44,516 --> 00:13:46,316
还是非常的可观

424
00:13:46,316 --> 00:13:47,033
当然这里面

425
00:13:47,033 --> 00:13:50,466
只是仅限于一个 NVSwitch 的 TP

426
00:13:50,466 --> 00:13:52,783
也就是我们的对应的张量

427
00:13:52,783 --> 00:13:54,433
并行的情况下

428
00:13:54,433 --> 00:13:56,783
它确实比一个 p2p

429
00:13:56,833 --> 00:13:59,266
也就是没有做 NVSwitch 的一个情况

430
00:13:59,266 --> 00:14:00,716
就点对点发送的时候

431
00:14:00,716 --> 00:14:02,633
有了比较好的性能的提升

432
00:14:02,633 --> 00:14:05,183
基本上都稳定在 1.5 倍

433
00:14:05,316 --> 00:14:05,716
另外的话

434
00:14:05,716 --> 00:14:07,516
我们看一下另外一种统计的方式

435
00:14:07,516 --> 00:14:07,866
就是我

436
00:14:07,866 --> 00:14:11,233
们的 Batch size 不断的增大的一种情况

437
00:14:11,666 --> 00:14:13,516
更大的 Batch size 是意味着我们一次

438
00:14:13,516 --> 00:14:15,433
可以处理越多用户的请求

439
00:14:15,433 --> 00:14:17,983
因为一个用户的请求是一个 Batch

440
00:14:18,033 --> 00:14:20,266
那两个用户就提供了两个 Batch

441
00:14:20,266 --> 00:14:23,233
或者你提供了给我们两个服务的请求

442
00:14:23,233 --> 00:14:25,750
那我们可以看到我们的 Batch size 是越大

443
00:14:25,983 --> 00:14:28,516
整体的一个性能的一个计算

444
00:14:28,516 --> 00:14:30,266
也就是我们网络带宽的利用率

445
00:14:30,266 --> 00:14:32,433
其实不断的去做提升

446
00:14:32,433 --> 00:14:34,033
整体提升了整个服务器

447
00:14:34,033 --> 00:14:35,716
有 DGX 的一个利用率

448
00:14:36,066 --> 00:14:37,950
降低了每次推理的成本

449
00:14:37,950 --> 00:14:40,033
因此我们真正的推理卡

450
00:14:40,033 --> 00:14:42,466
并是并不是说不需要太高

451
00:14:42,466 --> 00:14:43,916
一个互联的带宽

452
00:14:43,916 --> 00:14:45,866
其实他也是需要

453
00:14:45,866 --> 00:14:48,150
因为随着我们的网络的带宽的变大

454
00:14:48,150 --> 00:14:49,116
我们的模型的变大

455
00:14:49,116 --> 00:14:51,383
我们的服务的请求也会变大

456
00:14:51,466 --> 00:14:52,950
相对应的网络的利用率

457
00:14:52,950 --> 00:14:54,116
也会增加

458
00:14:54,783 --> 00:14:55,950
哎喝口水

459
00:14:56,833 --> 00:14:58,033
现在我们来到了第三个内容

460
00:14:58,033 --> 00:14:58,383
看一下

461
00:14:58,383 --> 00:15:01,233
网卡跟交换机之间的一个具体的区别

462
00:15:01,233 --> 00:15:02,350
的那这里面

463
00:15:02,350 --> 00:15:03,583
在 Blackwell 系列里面

464
00:15:03,583 --> 00:15:06,350
其实它主要是用了一个 ConnectX

465
00:15:06,350 --> 00:15:07,150
一个 8

466
00:15:07,150 --> 00:15:08,866
第八代的一个具体的网卡了

467
00:15:09,466 --> 00:15:09,916
那这里面

468
00:15:09,916 --> 00:15:11,033
我们看一下右边的这个图

469
00:15:11,033 --> 00:15:11,550
还没有意思

470
00:15:11,550 --> 00:15:13,983
这个就是它具体的一个网卡了

471
00:15:13,983 --> 00:15:14,866
一共有 4 个了

472
00:15:14,866 --> 00:15:16,433
重要的这个是另外一个

473
00:15:16,550 --> 00:15:17,433
另另外一个东西了

474
00:15:17,433 --> 00:15:19,383
我们看一下左边的这 4 个网卡

475
00:15:19,383 --> 00:15:21,950
首先 DGX 的一个 B 系列里面

476
00:15:21,950 --> 00:15:24,550
就发布了新一代的 IB 的网卡

477
00:15:24,550 --> 00:15:26,266
叫做 connectX-8

478
00:15:26,266 --> 00:15:27,433
相对应的通讯带宽

479
00:15:27,433 --> 00:15:28,433
是非常的夸张

480
00:15:28,433 --> 00:15:30,266
去到 800Gb/s

481
00:15:30,266 --> 00:15:31,666
那注意了这里面的这个

482
00:15:31,666 --> 00:15:33,150
b 是一个小写的 b

483
00:15:33,233 --> 00:15:35,383
GPU 跟 GPU 之间的传输

484
00:15:35,383 --> 00:15:36,550
是大写的 B

485
00:15:36,716 --> 00:15:38,116
GPU 跟 CPU 之间

486
00:15:38,116 --> 00:15:39,833
或者跟网络节点跟节点之间

487
00:15:39,833 --> 00:15:41,150
是一个小 b

488
00:15:41,433 --> 00:15:42,583
那 h 系列

489
00:15:42,583 --> 00:15:43,916
采用的是第七代哦

490
00:15:43,916 --> 00:15:45,633
现在我们已经来到了第八代

491
00:15:45,666 --> 00:15:47,233
整体的网络的带宽

492
00:15:47,233 --> 00:15:49,316
其实是提升了一倍有多

493
00:15:49,316 --> 00:15:51,433
A100 可能是上一代了

494
00:15:51,433 --> 00:15:52,866
就变成 200Gb/s 了

495
00:15:52,866 --> 00:15:53,516
所以每一代

496
00:15:53,516 --> 00:15:55,833
它都有一个倍数关系的提升

497
00:15:55,833 --> 00:15:57,066
还是蛮有意思

498
00:15:58,933 --> 00:15:59,383
那接着

499
00:15:59,383 --> 00:16:01,016
我们看一下另外一个信息

500
00:16:01,016 --> 00:16:01,866
画另外一个图

501
00:16:01,866 --> 00:16:03,616
这些是官方的渲染图

502
00:16:03,616 --> 00:16:04,816
ZOMI 觉得还是蛮酷

503
00:16:04,816 --> 00:16:07,183
大家可以放大的来去看一看了

504
00:16:07,183 --> 00:16:07,816
那中间

505
00:16:07,816 --> 00:16:10,016
其实还有网络传输的一些芯片啦

506
00:16:10,216 --> 00:16:11,266
那在整体来说

507
00:16:11,266 --> 00:16:12,066
里面中间

508
00:16:12,066 --> 00:16:14,066
用的是英伟达的 BLUEFIELD

509
00:16:14,066 --> 00:16:15,466
一个第三代的芯片

510
00:16:15,466 --> 00:16:15,900
不过

511
00:16:15,900 --> 00:16:17,783
助理没有深入的去研究这代芯片

512
00:16:17,783 --> 00:16:19,816
所以说就不跟大家去逼逼了

513
00:16:19,816 --> 00:16:22,466
那整个 BLUEFIELD 其实主要是支持以太网

514
00:16:22,466 --> 00:16:24,500
还有 IB 的速度

515
00:16:24,500 --> 00:16:25,266
非常的高

516
00:16:25,266 --> 00:16:27,100
跟网络存储能相关的结合了

517
00:16:27,133 --> 00:16:27,700
所以这里面

518
00:16:27,700 --> 00:16:29,466
走的不是参数面的网络

519
00:16:29,466 --> 00:16:31,500
而是通通讯面的网络了

520
00:16:31,500 --> 00:16:32,500
所以的参数面的网络

521
00:16:32,500 --> 00:16:35,300
就指我们传输网络模型的参数

522
00:16:35,300 --> 00:16:37,066
作用的是一个大 B 了

523
00:16:37,183 --> 00:16:38,900
而这以太网跟 IB

524
00:16:38,900 --> 00:16:40,066
就我们刚才讲到

525
00:16:40,066 --> 00:16:41,066
用的是小 b

526
00:16:41,066 --> 00:16:43,383
传输我们的多少比特的数据

527
00:16:43,383 --> 00:16:45,733
跟我们的网络存储是相结合

528
00:16:46,100 --> 00:16:47,383
那 BLUEFIELD 的 3

529
00:16:47,383 --> 00:16:49,016
它是一个 super NIC

530
00:16:49,016 --> 00:16:50,266
也就是超级网卡了

531
00:16:50,266 --> 00:16:51,700
可以在 GPU 节点之间

532
00:16:51,700 --> 00:16:53,983
通过以太网了进行一个级连

533
00:16:53,983 --> 00:16:55,066
所以整体来说还是

534
00:16:55,066 --> 00:16:55,466
蛮有意思

535
00:16:55,466 --> 00:16:57,383
大家可以深入的去研究一下

536
00:16:57,616 --> 00:16:59,866
这里面 ZOMI 找了两个截图

537
00:16:59,866 --> 00:17:00,333
第一个

538
00:17:00,333 --> 00:17:03,533
就是 Quantum-的一个 X800 的 IB 的交换机

539
00:17:03,533 --> 00:17:04,333
另外一个

540
00:17:04,333 --> 00:17:06,783
就是 Spectrum 的 X800 以太网的交换机

541
00:17:06,783 --> 00:17:07,816
现在来说

542
00:17:07,866 --> 00:17:09,783
在整体的大规模组网

543
00:17:09,783 --> 00:17:10,666
特别是在国外

544
00:17:10,666 --> 00:17:12,666
国内其实很难买到相关的产品了

545
00:17:12,666 --> 00:17:13,016
当然了

546
00:17:13,016 --> 00:17:15,466
IB 的交换机还是能..一点进来

547
00:17:15,466 --> 00:17:16,500
不过怎么进来

548
00:17:16,500 --> 00:17:17,666
其实 ZOMI 不知道

549
00:17:17,666 --> 00:17:18,466
不要问我

550
00:17:26,466 --> 00:17:28,183
我只是道听途说

551
00:17:28,183 --> 00:17:30,216
所以说很多的不同厂商

552
00:17:30,216 --> 00:17:31,416
其实会买英伟达

553
00:17:31,416 --> 00:17:32,416
但是怎么组网

554
00:17:32,416 --> 00:17:33,666
可能现在来看

555
00:17:33,666 --> 00:17:35,183
更多的会用以太网交换机

556
00:17:35,183 --> 00:17:36,100
因为以太网交换机

557
00:17:36,100 --> 00:17:38,583
会更加常见和更加的通用

558
00:17:39,066 --> 00:17:40,733
今天的内容到这里为止了

559
00:17:40,733 --> 00:17:42,616
重点跟大家一起去回顾了一下

560
00:17:42,616 --> 00:17:45,816
整个英伟达的一个带宽的基本的分析

561
00:17:45,816 --> 00:17:47,300
特别是带宽是怎么去算

562
00:17:47,300 --> 00:17:49,816
特别是以每一代为例子了

563
00:17:49,816 --> 00:17:50,533
它的带宽

564
00:17:50,533 --> 00:17:52,783
大 B 跟小 b 之间去怎么去核算

565
00:17:52,783 --> 00:17:54,216
然后网络的带宽

566
00:17:54,216 --> 00:17:56,066
其实或者我们的计算的带宽

567
00:17:56,066 --> 00:17:56,900
跟网络带宽

568
00:17:56,900 --> 00:17:57,816
是分开

569
00:17:58,183 --> 00:17:58,933
一个计算带宽

570
00:17:58,933 --> 00:18:00,016
一个网络带宽

571
00:18:00,016 --> 00:18:02,783
第二个跟大家去唠了一下 NVLink

572
00:18:02,900 --> 00:18:06,300
衍生了我们 NVSwitch 的具体的芯片

573
00:18:06,300 --> 00:18:08,133
NVLink 是一个具体的协议

574
00:18:08,133 --> 00:18:09,983
和具体的一个通讯的链路

575
00:18:09,983 --> 00:18:13,500
那我们讲完节点内的一个网卡

576
00:18:13,500 --> 00:18:15,216
或者节点间的一个带宽计算之后

577
00:18:15,216 --> 00:18:16,650
我们就看节点间

578
00:18:16,650 --> 00:18:18,983
包括节点跟外面的一些存储设备

579
00:18:18,983 --> 00:18:20,900
和相关的其他设备的交换

580
00:18:20,900 --> 00:18:23,100
主要是用了网卡跟交换机

581
00:18:23,100 --> 00:18:24,333
那总体今天内容

582
00:18:24,333 --> 00:18:25,183
就到这为止

583
00:18:25,183 --> 00:18:25,650
谢谢各位

584
00:18:25,650 --> 00:18:26,450
拜了个拜

