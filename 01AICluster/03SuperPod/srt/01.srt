1
00:00:00,000 --> 00:00:01,950
内容/录制:Z0MI 酱，视频剪辑/字幕:梁嘉铭

2
00:00:05,733 --> 00:00:06,683
哈喽大家好

3
00:00:06,683 --> 00:00:08,883
今天失踪人口终于回归了

4
00:00:08,883 --> 00:00:10,283
我是 ZOMI

5
00:00:10,483 --> 00:00:11,366
在这个系列里面

6
00:00:11,366 --> 00:00:13,966
主要是跟大家去分享英伟达 Blackwell

7
00:00:13,966 --> 00:00:14,966
最新一代产品

8
00:00:14,966 --> 00:00:16,933
一个整体演进架构

9
00:00:16,933 --> 00:00:18,650
和相关产品形态

10
00:00:18,650 --> 00:00:19,483
那我们记得

11
00:00:19,483 --> 00:00:20,850
在很早之前

12
00:00:20,850 --> 00:00:22,766
其中 ZOMI 已经跟大家去分享了

13
00:00:22,766 --> 00:00:24,766
英伟达 GPU 整体架构发展

14
00:00:24,933 --> 00:00:26,966
从 10 年前 Farmi Kkepler 

15
00:00:26,966 --> 00:00:29,333
Maxwell Pascal 到 V100

16
00:00:29,333 --> 00:00:30,850
然后再到图灵和 A100

17
00:00:30,850 --> 00:00:32,400
H100

18
00:00:32,600 --> 00:00:35,400
到现在 B100 或者 B200 相关架构

19
00:00:35,733 --> 00:00:37,383
然后逐层去看一下

20
00:00:37,383 --> 00:00:40,266
里面有哪些新细节和新方式

21
00:00:40,266 --> 00:00:42,733
虽然整个 B100 或者 B200

22
00:00:42,733 --> 00:00:44,016
B 系列产品

23
00:00:44,016 --> 00:00:46,016
虽然在网上没有公布太多信息

24
00:00:46,016 --> 00:00:47,533
但是我们可以看到

25
00:00:47,533 --> 00:00:50,266
它产品演进是非常夸张

26
00:00:50,266 --> 00:00:51,300
非常快

27
00:00:51,300 --> 00:00:53,816
那从一块芯片再到一个模组

28
00:00:53,816 --> 00:00:55,066
再到一个 rack

29
00:00:55,100 --> 00:00:56,300
再到一个 Trays

30
00:00:56,300 --> 00:00:58,066
再到一个整个机柜

31
00:00:58,066 --> 00:01:01,383
这种方式衍生了非常多不同型号

32
00:01:01,383 --> 00:01:02,866
和代际和相关一些

33
00:01:02,866 --> 00:01:04,666
B200 B100G

34
00:01:04,666 --> 00:01:06,816
B200 NVL72

35
00:01:06,816 --> 00:01:07,900
各种各样名词

36
00:01:07,900 --> 00:01:09,383
今天我们来搞清楚

37
00:01:09,383 --> 00:01:12,100
这些名词背后代表是什么

38
00:01:12,183 --> 00:01:16,016
产品背后代表又是哪些新 AI 方向

39
00:01:16,016 --> 00:01:18,616
新产品演进方向

40
00:01:18,616 --> 00:01:20,533
那为什么要去了解这些

41
00:01:20,533 --> 00:01:22,333
主要是因为去了解友商

42
00:01:22,333 --> 00:01:25,983
去了解我们世界上最强算力产品

43
00:01:25,983 --> 00:01:27,266
然后看未来

44
00:01:27,266 --> 00:01:28,700
看历史看现状

45
00:01:28,700 --> 00:01:30,300
看自己那今天

46
00:01:30,300 --> 00:01:31,866
我们在这一节内容里面

47
00:01:31,866 --> 00:01:33,216
主要是分开三个内容

48
00:01:33,216 --> 00:01:33,616
第一个

49
00:01:33,616 --> 00:01:36,500
就是单个 GPU 单 chip 一个介绍

50
00:01:36,533 --> 00:01:37,733
单 Die 介绍

51
00:01:37,733 --> 00:01:39,383
接着我们看一下它整体

52
00:01:39,383 --> 00:01:40,533
封装成一个节点

53
00:01:40,533 --> 00:01:42,416
变成 HGX 这种产品

54
00:01:42,416 --> 00:01:44,983
介绍接着我们看一下多个 HGX

55
00:01:44,983 --> 00:01:46,983
就多个节点集合起来

56
00:01:46,983 --> 00:01:49,616
变成一个 NVL 一个整体产品

57
00:01:49,616 --> 00:01:50,616
一个了解

58
00:01:50,616 --> 00:01:51,533
我们现在

59
00:01:51,533 --> 00:01:52,700
来正式开启

60
00:01:52,700 --> 00:01:55,100
今天要跟大家去分享内容了

61
00:01:55,866 --> 00:01:57,333
我们现在马上来到了第一个内容

62
00:01:57,333 --> 00:02:00,100
就是 GPU 一个整体产品介绍

63
00:02:00,100 --> 00:02:01,383
所谓 GPU 产品介绍了

64
00:02:01,383 --> 00:02:02,016
我们看一下

65
00:02:02,016 --> 00:02:05,666
整个 GPU 一个历史发展了

66
00:02:05,666 --> 00:02:07,666
或者做了一个简单对比

67
00:02:07,783 --> 00:02:09,700
这里面就做了嗯

68
00:02:09,700 --> 00:02:11,100
三个产品型号对比

69
00:02:11,100 --> 00:02:11,983
第一个就是 A100

70
00:02:11,983 --> 00:02:12,866
就 ampere 架构

71
00:02:12,866 --> 00:02:14,416
第二个就是 hopper 架构

72
00:02:14,416 --> 00:02:15,733
一个 H100 H200

73
00:02:15,733 --> 00:02:19,133
GH200 那第三个就是 Backwell

74
00:02:19,133 --> 00:02:21,216
就是最新一代的 B100 B200

75
00:02:21,216 --> 00:02:24,500
还有 FB200 和 GB200 相关的类

76
00:02:24,700 --> 00:02:27,500
从在整个单机位的产品里面来看了

77
00:02:27,500 --> 00:02:28,616
横向的拉通

78
00:02:28,616 --> 00:02:30,933
其实 ZOMI 比较关心的可能几个点

79
00:02:30,933 --> 00:02:32,616
第一个就是 HBM 的大小

80
00:02:32,616 --> 00:02:33,500
HBM 的带宽

81
00:02:33,500 --> 00:02:36,333
还有中间的一对 FP16 INT8 FP8

82
00:02:36,333 --> 00:02:39,216
FP6 FP4 相关的算力

83
00:02:39,216 --> 00:02:41,133
最后可能还会有 NVLink

84
00:02:41,133 --> 00:02:42,300
就有卡跟卡之间

85
00:02:42,300 --> 00:02:44,983
也有 Die 跟 Die 之间的一个带宽

86
00:02:45,333 --> 00:02:46,666
那这边我们逐个来看一下

87
00:02:46,666 --> 00:02:48,016
首先 HBM 的带宽

88
00:02:48,016 --> 00:02:50,016
它是不断的在增长

89
00:02:50,016 --> 00:02:51,666
随着我们的型号

90
00:02:51,666 --> 00:02:52,900
这个也是很好理解

91
00:02:52,900 --> 00:02:54,616
然后 HBM 的带宽和大小

92
00:02:54,616 --> 00:02:56,333
确实也在同步的增长

93
00:02:56,333 --> 00:02:58,700
但是我们往下看一下相关的算力

94
00:02:58,700 --> 00:03:00,466
这里面其实有一些是标灰

95
00:03:00,466 --> 00:03:01,816
也就是 A100 跟 H100

96
00:03:01,816 --> 00:03:03,533
M100 架构跟 hopper 架构

97
00:03:03,700 --> 00:03:06,783
它里面所涉及到的更低精度的算力

98
00:03:06,783 --> 00:03:07,933
虽然是没有

99
00:03:07,933 --> 00:03:10,100
其实在 A100 跟 H100 里面

100
00:03:10,100 --> 00:03:13,216
主要是 FP16 相关算力

101
00:03:13,216 --> 00:03:14,133
当然了不含有 INT8

102
00:03:14,133 --> 00:03:16,266
INT8 大家都有

103
00:03:16,266 --> 00:03:17,216
在 H100 里面

104
00:03:17,216 --> 00:03:18,666
其实英伟达已经在推

105
00:03:18,666 --> 00:03:20,700
FP8 的一个相关的算力了

106
00:03:20,700 --> 00:03:22,466
但是其实这一块的算力

107
00:03:22,466 --> 00:03:24,783
其实在推理的场景可能还会运用

108
00:03:24,783 --> 00:03:25,733
但是在训练里面

109
00:03:25,733 --> 00:03:26,100
说实话

110
00:03:26,100 --> 00:03:29,216
现在来说还是很少用户去使用

111
00:03:29,383 --> 00:03:31,100
不过英伟达它还是比较激进

112
00:03:31,100 --> 00:03:32,333
在 B 系列里面

113
00:03:32,333 --> 00:03:34,533
就推出了 FP6 和 FP4

114
00:03:34,533 --> 00:03:36,816
更低精度的一些数据的格式了

115
00:03:36,816 --> 00:03:39,266
我们后面会解释一下相关的内容

116
00:03:39,416 --> 00:03:40,183
接着我们看一下

117
00:03:40,183 --> 00:03:42,066
整个 NVLINK 的一个带宽

118
00:03:42,066 --> 00:03:43,466
就是 NVLINK 的带宽

119
00:03:43,466 --> 00:03:45,500
从一开始的 600GB 每秒

120
00:03:45,500 --> 00:03:46,583
或者 600GBps

121
00:03:46,583 --> 00:03:50,216
我们叫做慢慢的增长到 1.8TBps

122
00:03:50,216 --> 00:03:51,933
或者到了 GB200 里面

123
00:03:51,933 --> 00:03:53,816
到了 3.6TBps

124
00:03:53,816 --> 00:03:54,983
这是非常夸张

125
00:03:54,983 --> 00:03:57,616
虽然这么高规格的一个带宽的型号了

126
00:03:57,616 --> 00:03:59,466
已经不能进入到国内了

127
00:03:59,583 --> 00:04:00,216
不过无所谓

128
00:04:00,216 --> 00:04:03,300
不阻止我们去了解这一块产品

129
00:04:03,300 --> 00:04:04,733
那 ZOMI 觉得最有意思

130
00:04:04,733 --> 00:04:06,783
就是看下面的一个 Others

131
00:04:06,783 --> 00:04:07,983
也就是 A100

132
00:04:07,983 --> 00:04:09,133
其实它是一块 Die

133
00:04:09,133 --> 00:04:09,933
一块晶圆

134
00:04:09,933 --> 00:04:11,066
一个晶粒

135
00:04:11,300 --> 00:04:12,983
之间一个晶粒一个 GPU

136
00:04:13,133 --> 00:04:15,216
但是到了 BC 的里面

137
00:04:15,216 --> 00:04:18,066
它却变成两个 Die 进行合封

138
00:04:18,066 --> 00:04:19,383
而这很有意思的就是

139
00:04:19,383 --> 00:04:22,383
从我们的 H100 到 B 系列

140
00:04:22,383 --> 00:04:25,666
它确实从一个 Die 变成两个 Die 了

141
00:04:25,666 --> 00:04:27,066
所以说大家要注意了

142
00:04:27,066 --> 00:04:28,533
他把以前一张卡

143
00:04:28,900 --> 00:04:30,866
变成现在两张卡的概念

144
00:04:30,866 --> 00:04:32,300
把两张卡合成

145
00:04:32,300 --> 00:04:35,183
合封成一张卡的这种形式哦

146
00:04:35,183 --> 00:04:37,583
所以我们看到在一个 Trays 板里面

147
00:04:37,583 --> 00:04:39,016
就只有四张 GPU

148
00:04:39,016 --> 00:04:41,466
实际上它跟以前是一样

149
00:04:41,466 --> 00:04:42,583
有八张卡

150
00:04:42,583 --> 00:04:44,666
因为以前是一个 Die 进行封装

151
00:04:44,666 --> 00:04:46,333
现在变成两个 Die 进行和封

152
00:04:46,616 --> 00:04:47,300
那我们现在

153
00:04:47,300 --> 00:04:49,700
重新的来去看一下这个图案

154
00:04:49,700 --> 00:04:51,016
这个图案是蛮有意思

155
00:04:51,016 --> 00:04:52,333
上面的这些模块

156
00:04:52,333 --> 00:04:54,133
其实就是对应的 HBM 了

157
00:04:54,183 --> 00:04:55,500
HBM 跟我们的 Die

158
00:04:55,500 --> 00:04:56,700
其实这里面刚才说到了

159
00:04:56,700 --> 00:04:57,700
其实它有一个 Die

160
00:04:57,933 --> 00:04:58,866
然后另外两个 Die

161
00:04:58,866 --> 00:05:00,733
然后挂了好多个 HBM 了

162
00:05:00,733 --> 00:05:01,816
其实上面四个

163
00:05:01,816 --> 00:05:02,816
下面四个嘛

164
00:05:02,816 --> 00:05:03,700
然后整体

165
00:05:03,700 --> 00:05:06,533
我们再看一下左边的这些参数

166
00:05:06,533 --> 00:05:07,616
就是最核心

167
00:05:07,616 --> 00:05:11,733
就是 GB200 或者 B200 的相关的一些性能了

168
00:05:11,733 --> 00:05:13,300
其实也没什么好说

169
00:05:13,300 --> 00:05:16,216
我们继续往下看一下相关的内容了

170
00:05:16,216 --> 00:05:18,333
最后它这是一个 Trays

171
00:05:18,333 --> 00:05:21,300
Trays 新的一个名字了

172
00:05:21,300 --> 00:05:23,700
再变成那在 Trays 里面

173
00:05:23,700 --> 00:05:27,983
就有两片 GPU 会两片 B200

174
00:05:27,983 --> 00:05:29,300
出现一片 B200

175
00:05:29,300 --> 00:05:30,300
两片 B200

176
00:05:30,300 --> 00:05:34,816
再加一个英伟达自己发布的 Grace CPU

177
00:05:34,866 --> 00:05:35,583
那这里面

178
00:05:35,583 --> 00:05:38,466
用的是 NVLink 进行一个互传

179
00:05:38,466 --> 00:05:40,066
所以它互传的一个规格

180
00:05:40,066 --> 00:05:41,216
还是非常的高

181
00:05:41,383 --> 00:05:43,500
然后我们接着来去看一下

182
00:05:43,500 --> 00:05:45,133
首先 A100 到 H100

183
00:05:45,133 --> 00:05:48,866
整体我们看一下 FP16 的算力的增长

184
00:05:49,016 --> 00:05:51,133
基本上增长了三倍多

185
00:05:51,133 --> 00:05:54,133
但是功耗只是从 400 瓦到 700 瓦的增加

186
00:05:54,133 --> 00:05:55,066
所以可以看到

187
00:05:55,100 --> 00:05:57,533
GPU 的性能的提升还是非常夸张

188
00:05:57,533 --> 00:05:58,666
随着性能的提升

189
00:05:58,666 --> 00:06:00,300
或者我们的算力的提升

190
00:06:00,300 --> 00:06:02,616
它的一个功耗的提升没有那么大

191
00:06:02,616 --> 00:06:06,300
这也是新制程或者我们更新纳米制程

192
00:06:06,300 --> 00:06:08,066
带来的一个好处

193
00:06:09,333 --> 00:06:10,700
那另外的话我们对比一下

194
00:06:10,700 --> 00:06:15,983
看一下 H200 跟 B200 之间的 FP16 的算力了

195
00:06:15,983 --> 00:06:17,700
这边的 FP16 的算力

196
00:06:17,700 --> 00:06:19,583
增加了两倍有多

197
00:06:19,583 --> 00:06:20,466
而整体功耗

198
00:06:20,466 --> 00:06:23,016
也从 700 瓦到了 1 千瓦

199
00:06:23,016 --> 00:06:25,583
所以说我们的制程工艺的提升

200
00:06:25,866 --> 00:06:26,333
看到这里面

201
00:06:26,333 --> 00:06:27,700
我们有很有意思的点

202
00:06:27,700 --> 00:06:29,700
就是随着我们的算力的提升

203
00:06:29,700 --> 00:06:33,266
我们的一个功耗也在不断的提升

204
00:06:33,266 --> 00:06:34,216
但是功耗的提升

205
00:06:34,216 --> 00:06:35,533
比我们的算力的提升大

206
00:06:35,533 --> 00:06:38,900
而反观我们跨代的产品去看

207
00:06:39,183 --> 00:06:40,700
在同一个算力规格里面

208
00:06:40,700 --> 00:06:42,266
B200 的 FP16 的算力

209
00:06:42,266 --> 00:06:43,616
是 A100 的七倍

210
00:06:43,616 --> 00:06:45,533
功耗是 2.5 倍

211
00:06:45,533 --> 00:06:47,383
这些带来的性能的优势

212
00:06:47,383 --> 00:06:48,866
还是得益于

213
00:06:48,866 --> 00:06:50,866
制程工艺的提升

214
00:06:50,866 --> 00:06:52,783
然后但是蛮有意思的点

215
00:06:52,783 --> 00:06:55,466
就我们刚才提到了 FP4 跟 FP6

216
00:06:55,466 --> 00:06:57,266
更低精度的格式

217
00:06:57,533 --> 00:06:58,266
在前面几代

218
00:06:58,266 --> 00:06:59,533
是没有出现

219
00:06:59,533 --> 00:07:01,816
而在整个 B 系列里面去看

220
00:07:01,816 --> 00:07:05,583
基本上是两倍的一个差距

221
00:07:05,583 --> 00:07:06,666
那这里面

222
00:07:06,816 --> 00:07:08,933
里面的晶体管的设计

223
00:07:08,933 --> 00:07:10,700
还是蛮巧妙

224
00:07:11,733 --> 00:07:12,500
那这里面

225
00:07:12,500 --> 00:07:13,133
很多人

226
00:07:13,133 --> 00:07:14,333
或者有很多

227
00:07:14,333 --> 00:07:16,583
其他的一些同行会咨询我了

228
00:07:16,816 --> 00:07:19,733
那到底 DGXB200 它是不是适用于推理

229
00:07:19,733 --> 00:07:22,100
因为我们从整体的性能来看

230
00:07:22,100 --> 00:07:24,533
因为这个是英伟达的一个公布

231
00:07:24,533 --> 00:07:25,933
或者网上公布的一个图了

232
00:07:25,933 --> 00:07:27,133
在训练的过程当中

233
00:07:27,133 --> 00:07:30,983
可能有 DGXB200 和 DGXH100

234
00:07:30,983 --> 00:07:33,416
它的一个性能提升是三倍多

235
00:07:33,466 --> 00:07:35,216
但是在推理场景

236
00:07:35,216 --> 00:07:38,983
DGXH100 对比起 DGX 的 B200

237
00:07:38,983 --> 00:07:41,666
它是提升了接近 15 倍

238
00:07:41,666 --> 00:07:42,300
那这里面

239
00:07:42,300 --> 00:07:43,866
是非常利好我们

240
00:07:43,866 --> 00:07:46,183
influence 就是推理的场景

241
00:07:46,416 --> 00:07:48,866
为什么会呈现这么高的性能提升

242
00:07:48,866 --> 00:07:51,133
其实我们可以做一个简单的分析

243
00:07:51,133 --> 00:07:54,666
就是 HGXB200 里面对比起 H100

244
00:07:54,666 --> 00:07:55,583
它整体的算力

245
00:07:55,583 --> 00:07:58,783
我们刚才讲到了在 FP16 或者那个 INT8

246
00:07:58,783 --> 00:08:01,383
里面的算力提升了 2.52 倍

247
00:08:01,383 --> 00:08:03,100
然后整体 HBM 也大了

248
00:08:03,100 --> 00:08:05,700
然后带宽也到了 2 点多倍

249
00:08:05,866 --> 00:08:07,333
然后 NVLINK 的一个带宽

250
00:08:07,333 --> 00:08:08,666
说出来也是加倍了

251
00:08:08,666 --> 00:08:11,183
假设我们整体的 MFU

252
00:08:11,183 --> 00:08:13,333
也就是模型的算力的利用率

253
00:08:13,333 --> 00:08:16,900
只有 50% 那整体换了一些代际

254
00:08:17,183 --> 00:08:20,133
所以说算上刚才的一些性能的提升

255
00:08:20,133 --> 00:08:21,266
HBM 带宽

256
00:08:21,266 --> 00:08:22,183
算力

257
00:08:22,183 --> 00:08:25,416
然后整体训练的速度的提升三倍

258
00:08:25,416 --> 00:08:28,183
是非常符合我们做一个预期

259
00:08:28,183 --> 00:08:29,533
因为这是一个解决方案

260
00:08:29,533 --> 00:08:31,983
所以说没有办法非常完善

261
00:08:31,983 --> 00:08:33,533
去用一个公式来去表达

262
00:08:33,583 --> 00:08:35,100
但是还蛮有意思的点

263
00:08:35,100 --> 00:08:36,783
就是左边的这个图

264
00:08:36,866 --> 00:08:39,016
15 倍的性能的差异

265
00:08:39,016 --> 00:08:40,383
那这 15 倍的性能差异

266
00:08:40,383 --> 00:08:41,133
其实

267
00:08:41,133 --> 00:08:43,933
大家不要觉得它非常利好于推理

268
00:08:43,933 --> 00:08:46,266
实际上就你个人觉得 DGXB200

269
00:08:46,500 --> 00:08:48,066
并不一定非常适用于推理

270
00:08:48,066 --> 00:08:49,983
因为推理我们讲究的是性价比

271
00:08:49,983 --> 00:08:51,900
而这里面的 15 倍

272
00:08:51,900 --> 00:08:54,500
真正用的是 FP4 的算力

273
00:08:54,500 --> 00:08:57,183
跟 hopper 架构的 FP 8 的算力去比

274
00:08:57,183 --> 00:09:00,066
所以他们的比较是完全不对等

275
00:09:00,066 --> 00:09:01,533
不对等的比较之下

276
00:09:01,533 --> 00:09:03,133
你说他利好于推理

277
00:09:03,133 --> 00:09:04,266
或者就用推理

278
00:09:04,266 --> 00:09:06,933
或者就用这个训练服务器做推理

279
00:09:06,933 --> 00:09:08,616
其实是并不划算

280
00:09:08,616 --> 00:09:09,983
因为真正在推理场景

281
00:09:09,983 --> 00:09:13,066
大家还是非常讲究性价比

282
00:09:13,666 --> 00:09:14,900
接下来我们看一下第二点

283
00:09:14,900 --> 00:09:17,133
就是 HGX 的一个服务器了

284
00:09:17,133 --> 00:09:20,700
刚才只是讲了 B 系列的一个芯片了

285
00:09:21,100 --> 00:09:22,266
那 HGX 的服务器

286
00:09:22,266 --> 00:09:23,733
就是一个节点了

287
00:09:23,733 --> 00:09:24,616
那这里面

288
00:09:24,616 --> 00:09:26,933
ZOMI 也是同样的列了一个表格

289
00:09:26,933 --> 00:09:27,933
有兴趣的小伙伴

290
00:09:27,933 --> 00:09:29,466
也可以把这个表格截图下来

291
00:09:29,466 --> 00:09:30,100
一起去看

292
00:09:30,100 --> 00:09:31,533
或者把这个 PDF 了

293
00:09:31,533 --> 00:09:33,066
PPT 截图下来去看

294
00:09:33,066 --> 00:09:35,100
那在整个 HGX 的服务器里面

295
00:09:35,100 --> 00:09:37,300
ZOMI 做了一个三个横向的分析

296
00:09:37,300 --> 00:09:40,016
一个是 HGX 的 A100

297
00:09:40,266 --> 00:09:41,216
是 m 架构

298
00:09:41,216 --> 00:09:42,866
还有 HGX 的 H100

299
00:09:42,866 --> 00:09:44,783
当然它有 HGX 的 H200

300
00:09:44,866 --> 00:09:46,133
H200 其实

301
00:09:46,133 --> 00:09:46,983
国内拿不到货

302
00:09:46,983 --> 00:09:47,666
这种我见到

303
00:09:47,666 --> 00:09:48,500
其实嗯

304
00:09:48,500 --> 00:09:50,533
反正我见不到有人有这个货了

305
00:09:50,666 --> 00:09:54,016
然后另外的就是 HGX 的 B200 了

306
00:09:54,016 --> 00:09:57,383
那 HGX 的 B100 确实 ZOMI 也很少见到

307
00:09:57,383 --> 00:09:59,533
所以我们主要是关注这三个

308
00:09:59,733 --> 00:10:02,816
同样的我们会分开好几个内容去看

309
00:10:02,816 --> 00:10:03,216
第一个

310
00:10:03,216 --> 00:10:06,416
就是整体的 HBM 的一个相关的情况

311
00:10:06,416 --> 00:10:08,016
接着还有对应的算力

312
00:10:08,016 --> 00:10:08,300
当然

313
00:10:08,300 --> 00:10:10,466
这里面是一个节点了一个服务器

314
00:10:11,066 --> 00:10:13,416
所以我们还会看 GPU 跟 GPU 之间的带宽

315
00:10:13,500 --> 00:10:14,416
NVLink 的带宽

316
00:10:14,416 --> 00:10:15,783
还有以太网的带宽

317
00:10:15,783 --> 00:10:17,500
还有 IB 的带宽

318
00:10:17,500 --> 00:10:19,466
那这里面我们都会统一的去看看

319
00:10:19,466 --> 00:10:21,866
相关带宽横向的一个比较

320
00:10:21,866 --> 00:10:23,816
和纵向的比较

321
00:10:23,866 --> 00:10:25,700
最后可能还会

322
00:10:25,700 --> 00:10:26,900
有一些额外的信息了

323
00:10:26,900 --> 00:10:28,133
就是他的一个功耗

324
00:10:28,133 --> 00:10:30,783
还有他的一个使用的网络产品

325
00:10:30,933 --> 00:10:31,666
那蛮有意思

326
00:10:31,666 --> 00:10:33,583
就是我们看一下右边的这个图

327
00:10:33,583 --> 00:10:34,016
这个图

328
00:10:34,016 --> 00:10:37,333
其实跟我们 A100 或者 H100 里面的整体

329
00:10:37,333 --> 00:10:38,983
是完全不一样

330
00:10:38,983 --> 00:10:40,383
总体觉得还是蛮帅

331
00:10:40,383 --> 00:10:42,133
你可以看到它整体的一个散热

332
00:10:42,133 --> 00:10:43,183
一个散热片

333
00:10:43,300 --> 00:10:44,933
或者散热的一个上面的规格

334
00:10:44,933 --> 00:10:45,866
完全不一样

335
00:10:45,866 --> 00:10:47,583
跟以前然后

336
00:10:47,583 --> 00:10:48,733
这里面贴合八个

337
00:10:48,733 --> 00:10:49,466
那这个是

338
00:10:49,466 --> 00:10:52,216
是 HGXB100 的一个情况

339
00:10:52,216 --> 00:10:54,783
GSB200 好像补网那种方式

340
00:10:54,783 --> 00:10:56,133
去做一个贴合

341
00:10:56,266 --> 00:10:58,466
因为他后面的都用一个 Trays 了

342
00:10:58,466 --> 00:10:59,016
那没关系

343
00:10:59,016 --> 00:11:01,700
我们还是继续往下看一下相关

344
00:11:01,700 --> 00:11:02,016
内容

345
00:11:02,016 --> 00:11:02,866
那这里面

346
00:11:02,866 --> 00:11:05,416
就是整个真正的一个形态

347
00:11:05,416 --> 00:11:06,900
就是 HGX 的 B200

348
00:11:06,900 --> 00:11:08,383
也就是单的一个节点

349
00:11:08,383 --> 00:11:10,100
那个节点还是非常有意思

350
00:11:10,100 --> 00:11:11,333
就是里面

351
00:11:11,333 --> 00:11:13,583
真正的实际上

352
00:11:13,583 --> 00:11:14,666
在我们程序员看来了

353
00:11:14,666 --> 00:11:16,266
它应该是有 8 张卡

354
00:11:16,266 --> 00:11:17,900
这个第一个 Die

355
00:11:17,900 --> 00:11:18,466
第二个 Die

356
00:11:18,466 --> 00:11:19,333
第三个 Die

357
00:11:19,333 --> 00:11:20,100
第四个 Die

358
00:11:20,100 --> 00:11:20,933
第五个 Die

359
00:11:20,933 --> 00:11:21,500
第六个 Die

360
00:11:21,500 --> 00:11:22,133
第七个 Die

361
00:11:22,133 --> 00:11:22,933
第八个 Die

362
00:11:22,933 --> 00:11:23,933
一共有八张卡

363
00:11:23,933 --> 00:11:24,333
但是

364
00:11:24,333 --> 00:11:27,300
他把两张卡或者两个 Die 的合分成一个

365
00:11:27,300 --> 00:11:28,300
所以大家看上去

366
00:11:28,300 --> 00:11:29,133
只有四个

367
00:11:29,133 --> 00:11:29,666
那另外

368
00:11:29,666 --> 00:11:30,383
他 CPU

369
00:11:30,383 --> 00:11:33,216
其实跟以前的 A100 跟 H100

370
00:11:33,216 --> 00:11:34,533
其实是比较类似

371
00:11:34,933 --> 00:11:35,983
有两个 CPU

372
00:11:35,983 --> 00:11:36,783
第一个第二个

373
00:11:36,783 --> 00:11:38,783
也就是一个 CPU 带动四张卡

374
00:11:38,783 --> 00:11:39,500
或者一个 CPU

375
00:11:39,500 --> 00:11:41,733
带动两张卡的一个形态

376
00:11:41,733 --> 00:11:42,616
那往下面看

377
00:11:42,616 --> 00:11:44,466
就是它的一个网卡了

378
00:11:44,466 --> 00:11:46,933
那网卡我们后面会单独的去讲

379
00:11:46,933 --> 00:11:47,300
这里面

380
00:11:47,300 --> 00:11:48,466
我们更关注于

381
00:11:48,466 --> 00:11:51,666
就是 HGX 的一个整体的服务器的形态

382
00:11:53,100 --> 00:11:54,383
那在整体的服务器形态了

383
00:11:54,383 --> 00:11:57,466
我们还是要关注一下相关的参数

384
00:11:57,733 --> 00:11:59,416
从 HGX 的 A100

385
00:11:59,416 --> 00:12:01,900
到 HGX 的 H 系列

386
00:12:02,066 --> 00:12:02,466
总体来说

387
00:12:02,466 --> 00:12:04,666
我们看一下 FP16 的算力

388
00:12:04,666 --> 00:12:06,416
一开始是 312T

389
00:12:06,416 --> 00:12:08,900
这个是比较中规中矩的规格了

390
00:12:08,900 --> 00:12:11,733
但是到了 HGX H100 还是非常的夸张

391
00:12:11,733 --> 00:12:15,133
它提升了接近 3.3 倍

392
00:12:15,133 --> 00:12:16,183
但是功耗

393
00:12:16,183 --> 00:12:17,500
我们看一下 GPU 的 power

394
00:12:17,666 --> 00:12:19,500
只提升了不到

395
00:12:19,500 --> 00:12:21,983
或者只消耗了不到两倍的一个功耗

396
00:12:21,983 --> 00:12:23,783
所以说整体的 A100

397
00:12:23,783 --> 00:12:25,183
跟 H100 之间的代际差异

398
00:12:25,183 --> 00:12:26,216
还是非常大

399
00:12:26,216 --> 00:12:27,300
所以如果有钱的话

400
00:12:27,300 --> 00:12:28,533
还是先买 A100

401
00:12:28,533 --> 00:12:30,416
而是不先买 100 了

402
00:12:30,416 --> 00:12:31,983
当然了现在 A100 其实

403
00:12:31,983 --> 00:12:33,183
国内比较难买到了

404
00:12:33,183 --> 00:12:34,733
H100 也比较难买到了

405
00:12:34,733 --> 00:12:35,700
那么同样

406
00:12:35,700 --> 00:12:37,100
去看一下 HGX

407
00:12:37,100 --> 00:12:41,266
H100 跟 HGXB 版这个一个横向的对比

408
00:12:41,266 --> 00:12:41,783
那当然了

409
00:12:41,783 --> 00:12:44,616
我们其实现在用到最多的才是 FP16

410
00:12:44,616 --> 00:12:46,783
那不管大家现在用大模型训练

411
00:12:46,783 --> 00:12:48,733
是训练 BF16 也好

412
00:12:48,733 --> 00:12:50,416
还是 FP16 也好

413
00:12:50,416 --> 00:12:52,533
它其实没有太太大的差异

414
00:12:52,533 --> 00:12:54,100
基本上我们继续往下看一下

415
00:12:54,133 --> 00:12:56,133
里面的 FP16 的算力的基本上

416
00:12:56,133 --> 00:12:58,100
增加了两倍左右

417
00:12:58,100 --> 00:12:59,100
而功耗

418
00:12:59,100 --> 00:13:00,583
其实是相当

419
00:13:00,583 --> 00:13:02,066
这也是我们的一个制程工艺

420
00:13:02,066 --> 00:13:03,983
带来的一个性能的提升了

421
00:13:04,016 --> 00:13:04,900
那不管怎么样

422
00:13:04,900 --> 00:13:06,183
我们继续往下看一下

423
00:13:06,183 --> 00:13:06,933
里面蛮有意思

424
00:13:06,933 --> 00:13:09,133
就是在网络方面

425
00:13:09,133 --> 00:13:10,933
a 系列跟 B 系列里面

426
00:13:10,933 --> 00:13:11,583
基本上

427
00:13:11,583 --> 00:13:12,383
在网络里面

428
00:13:12,383 --> 00:13:14,733
都是享用相同的一个型号

429
00:13:14,733 --> 00:13:17,533
IB 仍然选择 8 乘以 400GBps

430
00:13:17,700 --> 00:13:18,416
所以说

431
00:13:18,416 --> 00:13:19,383
在整个 IB 里面

432
00:13:19,383 --> 00:13:21,383
是没有太多的差异

433
00:13:21,383 --> 00:13:23,333
不过现在用 IB 组网的人

434
00:13:23,333 --> 00:13:24,066
越来越少了

435
00:13:24,066 --> 00:13:26,616
因为 IB 的性价比确实不高

436
00:13:26,616 --> 00:13:27,983
而且不利于维护

437
00:13:27,983 --> 00:13:29,466
和一个组装

438
00:13:29,466 --> 00:13:31,300
我是全套都要买英伟达

439
00:13:31,300 --> 00:13:32,733
于是现在更多的人

440
00:13:32,733 --> 00:13:34,583
会用以太网去组网

441
00:13:34,583 --> 00:13:36,066
这也使整个业界的发展

442
00:13:36,383 --> 00:13:38,416
最好的一个或者最终的一个选择

443
00:13:39,066 --> 00:13:40,733
现在我们来到了最后一个内容

444
00:13:40,733 --> 00:13:44,333
来看一下第三个 NVL 跟 SuperPod

445
00:13:44,466 --> 00:13:45,933
那为什么叫做 NVL

446
00:13:45,933 --> 00:13:50,383
是因为把刚才的 GHX 相关的节点

447
00:13:50,416 --> 00:13:52,533
通过 NVLink

448
00:13:52,900 --> 00:13:54,866
把它多个节点连接在一起

449
00:13:54,866 --> 00:13:56,183
所以叫做 NVL

450
00:13:56,183 --> 00:13:57,583
那 NVL 越来越多了

451
00:13:57,583 --> 00:13:59,016
就变成一个超节点

452
00:13:59,016 --> 00:14:00,416
所以叫做 SuperPod

453
00:14:00,533 --> 00:14:01,016
这里面

454
00:14:01,016 --> 00:14:03,100
我们还是以横向作为例子

455
00:14:03,100 --> 00:14:05,583
看一下 hopper 跟 Blackwell

456
00:14:05,583 --> 00:14:07,783
两个不同架构之间的一个区别

457
00:14:07,783 --> 00:14:09,216
那从整体型号来看

458
00:14:09,216 --> 00:14:10,066
我们可以看到

459
00:14:10,066 --> 00:14:12,900
这里面的 H100 或者 H 系列里面

460
00:14:12,900 --> 00:14:14,533
它是 NVL 32 个

461
00:14:14,533 --> 00:14:16,416
也就是 32 张卡连在一起

462
00:14:16,416 --> 00:14:16,866
另外的话

463
00:14:16,866 --> 00:14:19,983
它另外还有一个 B 系列里面

464
00:14:19,983 --> 00:14:21,666
叫做 NVL72

465
00:14:21,666 --> 00:14:24,016
从 72 里面可以看到它确实

466
00:14:24,016 --> 00:14:25,616
增长了一些数量级

467
00:14:25,616 --> 00:14:28,133
而整体的 HGX 200 的 SuperPod

468
00:14:28,133 --> 00:14:30,700
它其实有 256 个 GPU

469
00:14:31,066 --> 00:14:32,216
在 GP 单板里面

470
00:14:32,216 --> 00:14:33,500
它的 GPU 数量

471
00:14:33,500 --> 00:14:34,416
就越来越多了

472
00:14:34,416 --> 00:14:38,016
756 个同样我们关注几个点

473
00:14:38,466 --> 00:14:38,866
第一个

474
00:14:38,866 --> 00:14:41,416
就是因为它是一个 SuperPod 超节点

475
00:14:41,416 --> 00:14:43,616
所以它会包括 CPUGPU

476
00:14:43,666 --> 00:14:44,183
所以这里面

477
00:14:44,183 --> 00:14:49,333
我们内存会关注是 HBM LPDDR

478
00:14:49,333 --> 00:14:51,133
当然了还有 HBM 一个带宽

479
00:14:51,300 --> 00:14:53,900
那最核心我们还是要看算力

480
00:14:53,900 --> 00:14:54,466
所以这里面

481
00:14:54,466 --> 00:14:56,733
还是同样把相关算力列出来

482
00:14:56,900 --> 00:15:00,300
FP16 英特 8 FP8 FP6 Fp4

483
00:15:00,416 --> 00:15:00,900
另外的话

484
00:15:00,900 --> 00:15:03,933
我们因为涉及到超节点

485
00:15:04,016 --> 00:15:06,733
所以我们会看节点跟节点之间的连接

486
00:15:07,100 --> 00:15:08,333
卡跟卡之间的连接

487
00:15:08,333 --> 00:15:09,900
因此就出现了 GPU 跟 GPU

488
00:15:09,900 --> 00:15:12,016
NVSwitch NVLink

489
00:15:12,016 --> 00:15:15,383
以太网跟 IB 之间的一个带宽

490
00:15:15,383 --> 00:15:15,583
当然

491
00:15:15,583 --> 00:15:17,616
我们还会看一些其他额外信息

492
00:15:17,616 --> 00:15:18,733
就是 GPU 的 power

493
00:15:18,816 --> 00:15:21,383
还有网络代际相关产品

494
00:15:21,983 --> 00:15:22,383
那同样

495
00:15:22,383 --> 00:15:22,983
我们看一下

496
00:15:22,983 --> 00:15:27,416
整个 NVL 的一个 72 机柜长什么样子

497
00:15:27,416 --> 00:15:28,183
那后面

498
00:15:28,183 --> 00:15:29,500
大家叫这种形态

499
00:15:29,500 --> 00:15:31,300
叫做一个 rack

500
00:15:31,300 --> 00:15:32,133
就是一个柜了

501
00:15:32,133 --> 00:15:33,216
是还蛮有意思

502
00:15:33,216 --> 00:15:33,733
那这个柜

503
00:15:33,733 --> 00:15:34,300
我们后面

504
00:15:34,300 --> 00:15:36,300
会详细展开里面有什么内容

505
00:15:36,300 --> 00:15:37,816
包括上面一个

506
00:15:37,816 --> 00:15:38,616
交换机

507
00:15:38,616 --> 00:15:39,783
中间一个

508
00:15:39,783 --> 00:15:42,183
这里面应该是一个 NVswitch

509
00:15:42,183 --> 00:15:42,866
那上面

510
00:15:42,866 --> 00:15:44,583
有 10 个 tray

511
00:15:44,583 --> 00:15:46,333
然后下面有八个 tray

512
00:15:46,466 --> 00:15:48,216
然后合起来一共有 18

513
00:15:48,216 --> 00:15:49,900
乘以 4

514
00:15:49,900 --> 00:15:50,733
刚好等于 72

515
00:15:50,733 --> 00:15:53,500
里面 NVL72

516
00:15:53,500 --> 00:15:55,100
就是这么去组成

517
00:15:55,100 --> 00:15:55,816
那同样

518
00:15:55,816 --> 00:15:57,383
我们刚才把相关信息

519
00:15:57,383 --> 00:15:58,383
也放在这里面

520
00:15:58,383 --> 00:15:59,666
有兴趣小伙伴

521
00:15:59,666 --> 00:16:02,100
也可以下载下来去看

522
00:16:02,300 --> 00:16:04,983
那我们现在来重新观看所有信息哦

523
00:16:04,983 --> 00:16:09,266
从 ML32 也就是这里面 Hopper 架构到 NVL72

524
00:16:09,266 --> 00:16:10,816
个 GPU 数量

525
00:16:10,816 --> 00:16:13,100
从 32 增加到 72

526
00:16:13,133 --> 00:16:15,983
那在 FP16 一个算力来看

527
00:16:15,983 --> 00:16:18,933
从 32P 增长到 180P

528
00:16:18,933 --> 00:16:20,700
还是非常夸张

529
00:16:20,700 --> 00:16:23,100
就是我 GPU 卡数增加了

530
00:16:23,100 --> 00:16:24,666
可能也就

531
00:16:24,666 --> 00:16:27,100
两倍哦接近两倍多一点点

532
00:16:27,100 --> 00:16:28,866
但是算力是增长了 6 倍

533
00:16:28,866 --> 00:16:29,900
是非常夸张

534
00:16:29,900 --> 00:16:30,983
因为我们刚才讲到了

535
00:16:30,983 --> 00:16:33,183
单芯片算力其实在增长

536
00:16:33,183 --> 00:16:35,900
它把两个 Die 合封成一个 Die

537
00:16:36,183 --> 00:16:39,300
那现在我们来看一下 GH200 的 SuperPod

538
00:16:39,300 --> 00:16:42,100
跟 GB200 的 SuperPod 的一个差异

539
00:16:42,100 --> 00:16:43,266
那 GPU 数量

540
00:16:43,266 --> 00:16:47,266
从 256 个 GPU 到了 576 个 GPU

541
00:16:47,266 --> 00:16:48,466
FP16

542
00:16:48,466 --> 00:16:49,100
因为说实话

543
00:16:49,100 --> 00:16:51,616
为什么 ZOMI 重点关注 FP16 了

544
00:16:51,616 --> 00:16:52,583
而不是 INT8

545
00:16:52,583 --> 00:16:55,333
FP8 了虽然英伟达在不断在推

546
00:16:55,333 --> 00:16:57,300
但实际上我们现在训练大模型

547
00:16:57,300 --> 00:16:57,866
说实话

548
00:16:57,866 --> 00:17:00,500
超节点它主要是训练大语言模型

549
00:17:00,500 --> 00:17:01,700
或者视觉大模型

550
00:17:01,700 --> 00:17:03,500
或者一些多模态大模型嘛

551
00:17:03,700 --> 00:17:05,416
那现在训练过程当中

552
00:17:05,416 --> 00:17:07,533
使用更多是 BF 16

553
00:17:07,583 --> 00:17:08,933
那 BF 16 跟 FP 16

554
00:17:08,933 --> 00:17:10,216
它其实是相类似

555
00:17:10,216 --> 00:17:11,616
只是数据精度格式

556
00:17:11,616 --> 00:17:13,866
指数位跟小数位不一样而已

557
00:17:13,900 --> 00:17:15,216
用是相同晶体管

558
00:17:15,216 --> 00:17:16,700
去做一个具体计算

559
00:17:16,700 --> 00:17:18,783
那回到整个算力里面

560
00:17:18,783 --> 00:17:19,816
FP 16 算力

561
00:17:19,816 --> 00:17:25,216
是从 256P 到了 1440P

562
00:17:25,266 --> 00:17:27,533
增长了接近 6 倍

563
00:17:27,700 --> 00:17:29,333
非常夸张

564
00:17:29,416 --> 00:17:31,266
那我们继续往下看一下

565
00:17:31,266 --> 00:17:32,866
就是还有几个参数

566
00:17:32,866 --> 00:17:35,583
就是 NVL 一个 72

567
00:17:35,583 --> 00:17:37,733
跟 GB200 一个 SuperPod

568
00:17:37,783 --> 00:17:39,983
采用一个网络

569
00:17:40,216 --> 00:17:43,183
都是 connect X8 一个 IB 网络

570
00:17:43,183 --> 00:17:45,500
整体带宽是 800GPS

571
00:17:45,616 --> 00:17:46,500
所以说

572
00:17:46,500 --> 00:17:48,016
很多事情都还蛮有意思

573
00:17:48,016 --> 00:17:49,866
我们现在来到了最后一个内容

574
00:17:49,866 --> 00:17:53,016
就是 04 看一下整体总结跟思考

575
00:17:53,133 --> 00:17:53,983
还蛮有意思

576
00:17:53,983 --> 00:17:56,733
就是整个英伟达 GPS 架构发展了

577
00:17:56,733 --> 00:17:58,933
我们看一下整体 B 系列发展

578
00:17:59,216 --> 00:18:01,300
对我们国内芯片厂商

579
00:18:01,300 --> 00:18:04,066
和未来一个芯片架构演进

580
00:18:04,066 --> 00:18:05,066
和服务器演进

581
00:18:05,066 --> 00:18:06,816
还是蛮有非常大启发

582
00:18:06,816 --> 00:18:08,216
ZOMI 觉得确实非常大

583
00:18:08,216 --> 00:18:10,500
那我们现在来看一下下面一些功能

584
00:18:10,500 --> 00:18:11,416
一开始

585
00:18:11,416 --> 00:18:12,933
英伟达是推出了 B200

586
00:18:12,933 --> 00:18:14,216
一个 Blackwellsuper Chip

587
00:18:14,216 --> 00:18:16,100
说实话它只是一款芯片

588
00:18:16,100 --> 00:18:18,933
里面是两代有进行一个和封

589
00:18:18,933 --> 00:18:19,500
另外的话

590
00:18:19,500 --> 00:18:22,733
CPU 是推出自己的一个 Grace 的一个 CPU

591
00:18:22,816 --> 00:18:23,783
那接着

592
00:18:23,816 --> 00:18:26,066
两个 B200 跟一个 Grace

593
00:18:26,066 --> 00:18:28,733
就组成了一个小三角形

594
00:18:28,983 --> 00:18:31,066
那 GB200 一个 computer Tray

595
00:18:31,066 --> 00:18:33,100
就是一个计算板卡

596
00:18:33,100 --> 00:18:33,866
或者计算板

597
00:18:33,866 --> 00:18:36,133
就是藏这么一个形态在下面

598
00:18:36,133 --> 00:18:37,466
有好几个网卡

599
00:18:37,466 --> 00:18:38,500
那多个 tray

600
00:18:38,500 --> 00:18:40,816
就计算一个板载

601
00:18:40,816 --> 00:18:43,333
就会组成一个节点 rack

602
00:18:43,333 --> 00:18:45,933
那这个节点叫做 NVL72

603
00:18:45,933 --> 00:18:47,583
那多个 NVL72 组成

604
00:18:47,583 --> 00:18:49,466
就变成了一个 superPod

605
00:18:49,466 --> 00:18:52,066
所以它整体形态是这么去演进

606
00:18:52,066 --> 00:18:54,183
那从 A100 到 H100 到 B200

607
00:18:54,183 --> 00:18:54,933
我们会发现

608
00:18:54,933 --> 00:18:57,100
还非常有意思一个点

609
00:18:57,100 --> 00:18:58,466
就是现在

610
00:18:58,466 --> 00:19:00,733
大家都开始在从堆芯片

611
00:19:00,733 --> 00:19:02,416
堆料过程当中了

612
00:19:02,416 --> 00:19:04,216
慢慢走向合封

613
00:19:04,266 --> 00:19:04,983
还有

614
00:19:04,983 --> 00:19:07,816
形成整一套大规模集群解决方案

615
00:19:07,816 --> 00:19:08,466
过程

616
00:19:08,466 --> 00:19:11,700
这也是现在一个很明显发展趋势

617
00:19:11,700 --> 00:19:14,583
那是不是有点像思科当年做

618
00:19:14,583 --> 00:19:16,100
我就是在千禧年时候

619
00:19:16,100 --> 00:19:17,133
一个很蛮有意思事情

620
00:19:17,133 --> 00:19:19,866
就是不断把解决方案堆大

621
00:19:20,066 --> 00:19:20,616
你会发现

622
00:19:20,616 --> 00:19:23,016
单比单芯片能力开始出问题了

623
00:19:23,016 --> 00:19:25,300
于是大家就开始往料去堆了

624
00:19:25,300 --> 00:19:27,500
那至于这里面是不是一个泡沫

625
00:19:27,500 --> 00:19:28,733
我觉得还蛮有意思

626
00:19:28,733 --> 00:19:31,933
欢迎欢迎大家一起去思考和讨论

627
00:19:31,983 --> 00:19:33,816
今天内容就先到这里了

628
00:19:33,816 --> 00:19:34,383
谢谢各位

629
00:19:34,383 --> 00:19:35,183
拜了个拜

